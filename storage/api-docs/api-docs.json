{
    "openapi": "3.0.0",
    "info": {
        "title": "Quickstart in Couchbase with PHP and Laravel",
        "description": "\nA quickstart API using PHP and Laravel with Couchbase and travel-sample data.\n\nWe have a visual representation of the API documentation using Swagger which allows you to interact with the API's endpoints directly through the browser. It provides a clear view of the API including endpoints, HTTP methods, request parameters, and response objects.\n\n### Trying Out the API\n\nYou can try out an API by clicking on the 'Try it out' button next to the endpoints.\n\n- **Parameters:** If an endpoint requires parameters, Swagger UI provides input boxes for you to fill in. This could include path parameters, query strings, headers, or the body of a POST/PUT request.\n- **Execution:** Once you've inputted all the necessary parameters, you can click the 'Execute' button to make a live API call. Swagger UI will send the request to the API and display the response directly in the documentation. This includes the response code, response headers, and response body.\n\n### Models\n\nSwagger documents the structure of request and response bodies using models. These models define the expected data structure using JSON schema and are extremely helpful in understanding what data to send and expect.\n\nFor details on the API, please check the tutorial on the Couchbase Developer Portal: [Couchbase Quickstart PHP Laravel](https://developer.couchbase.com/tutorial-quickstart-php-laravel).\n",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local server"
        }
    ],
    "paths": {
        "/api/v1/airlines/list": {
            "get": {
                "tags": [
                    "Airlines"
                ],
                "summary": "List Airlines",
                "description": "Get List of Airlines\n\nThis provides an example\nof using Query operations\nin Couchbase to retrieve a list of airlines.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/AirlineController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirlineController.php)\n\nMethod: index",
                "operationId": "getAirlinesList",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "United States"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airline"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airlines/{id}": {
            "get": {
                "tags": [
                    "Airlines"
                ],
                "summary": "Get Document",
                "description": "Get Airline with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to retrieve a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirlineController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirlineController.php)\n\nMethod: show",
                "operationId": "getAirlineById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airline"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Airlines"
                ],
                "summary": "Update Document",
                "description": "Update Airline with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to update a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirlineController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirlineController.php)\n\nMethod: update",
                "operationId": "updateAirline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Airline object that needs to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airline"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Airlines"
                ],
                "summary": "Create Document",
                "description": "Create Airline with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to create a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirlineController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirlineController.php)\n\nMethod: store",
                "operationId": "createAirline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Airline object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airline"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airline/{id}": {
            "delete": {
                "tags": [
                    "Airlines"
                ],
                "summary": "Delete Document",
                "description": "Delete Airline with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to delete a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirlineController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirlineController.php)\n\nMethod: deleteAirline",
                "operationId": "deleteAirline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airlines/to-airport/{destinationAirportCode}": {
            "get": {
                "tags": [
                    "Airlines"
                ],
                "summary": "List Airlines to Airport",
                "description": "Get Airlines flying to specified Airport\n\nThis provides an example\nof using Query operations\nin Couchbase to find airlines flying to a specific airport.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/AirlineController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirlineController.php)\n\nMethod: toAirport",
                "operationId": "getAirlinesToAirport",
                "parameters": [
                    {
                        "name": "destinationAirportCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ATL"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airline"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airports/list": {
            "get": {
                "tags": [
                    "Airports"
                ],
                "summary": "List Airports",
                "description": "Get List of Airports\n\nThis provides an example\nof using Query operations\nin Couchbase to retrieve a list of airports.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/AirportController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirportController.php)\n\nMethod: index",
                "operationId": "getAirportsList",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Airport"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airports/{id}": {
            "get": {
                "tags": [
                    "Airports"
                ],
                "summary": "Get Document",
                "description": "Get Airport with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to retrieve a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirportController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirportController.php)\n\nMethod: show",
                "operationId": "getAirportById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Airport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Airports"
                ],
                "summary": "Update Document",
                "description": "Update Airport with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to update a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirportController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirportController.php)\n\nMethod: update",
                "operationId": "updateAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Airport object that needs to be updated or created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airport"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "201": {
                        "description": "Resource created successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Airports"
                ],
                "summary": "Create Document",
                "description": "Create Airport with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to create a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirportController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirportController.php)\n\nMethod: store",
                "operationId": "createAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Airport object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Airport"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Airports"
                ],
                "summary": "Delete Document",
                "description": "Delete Airport with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to delete a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/AirportController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirportController.php)\n\nMethod: deleteAirport",
                "operationId": "deleteAirport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/airports/direct-connections": {
            "get": {
                "tags": [
                    "Airports"
                ],
                "summary": "List Direct Connections",
                "description": "Get Airports with Direct Connections\n\nThis provides an example\nof using Query operations\nin Couchbase to find airports with direct flight connections.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/AirportController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/AirportController.php)\n\nMethod: getDirectConnections",
                "operationId": "getDirectConnections",
                "parameters": [
                    {
                        "name": "sourceAirportCode",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "ATL"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/hotels/autocomplete": {
            "get": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Search Hotels",
                "description": "Search Hotels by Name\n\nThis provides an example\nof using Query operations\nin Couchbase to perform a search with autocomplete functionality.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/HotelController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/HotelController.php)\n\nMethod: search",
                "operationId": "searchHotels",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/hotels/filter": {
            "get": {
                "tags": [
                    "Hotels"
                ],
                "summary": "Filter Hotels",
                "description": "Filter Hotels by Multiple Attributes\n\nThis provides an example\nof using Query operations\nin Couchbase to filter documents using multiple criteria.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/HotelController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/HotelController.php)\n\nMethod: filter",
                "operationId": "filterHotels",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request data"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/routes/list": {
            "get": {
                "tags": [
                    "Routes"
                ],
                "summary": "List Routes",
                "description": "Get List of Routes\n\nThis provides an example\nof using Query operations\nin Couchbase to retrieve a list of routes.\n\nQuery operations\nare unique to Couchbase and allow you to search, transform, and analyze data in your documents\n\nCode:\n[app/Http/Controllers/RouteController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/RouteController.php)\n\nMethod: index",
                "operationId": "getRoutesList",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 0
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Route"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/routes/{id}": {
            "get": {
                "tags": [
                    "Routes"
                ],
                "summary": "Get Document",
                "description": "Get Route with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to retrieve a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/RouteController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/RouteController.php)\n\nMethod: show",
                "operationId": "getRouteById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Route"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Routes"
                ],
                "summary": "Update Document",
                "description": "Update Route with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to update a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/RouteController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/RouteController.php)\n\nMethod: update",
                "operationId": "updateRoute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Route object that needs to be updated or created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Route"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "201": {
                        "description": "Resource created successfully"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Routes"
                ],
                "summary": "Create Document",
                "description": "Create Route with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to create a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/RouteController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/RouteController.php)\n\nMethod: store",
                "operationId": "createRoute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Route object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Route"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Routes"
                ],
                "summary": "Delete Document",
                "description": "Delete Route with specified ID\n\nThis provides an example\nof using Key Value operations\nin Couchbase to delete a document with specified ID.\n\nKey Value operations\nare unique to Couchbase and provide very high speed get/set/delete operations\n\nCode:\n[app/Http/Controllers/RouteController.php](https://github.com/couchbase-examples/php-laravel-quickstart/blob/main/app/Http/Controllers/RouteController.php)\n\nMethod: deleteRoute",
                "operationId": "deleteRoute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Airline": {
                "title": "Airline",
                "required": [
                    "callsign",
                    "country",
                    "iata",
                    "icao",
                    "name"
                ],
                "properties": {
                    "callsign": {
                        "description": "Callsign of the airline",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country of the airline",
                        "type": "string"
                    },
                    "iata": {
                        "description": "IATA code of the airline",
                        "type": "string"
                    },
                    "icao": {
                        "description": "ICAO code of the airline",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the airline",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Airport": {
                "title": "Airport",
                "required": [
                    "airportname",
                    "city",
                    "country",
                    "icao",
                    "tz",
                    "geo"
                ],
                "properties": {
                    "airportname": {
                        "description": "Name of the airport",
                        "type": "string"
                    },
                    "city": {
                        "description": "City where the airport is located",
                        "type": "string"
                    },
                    "country": {
                        "description": "Country where the airport is located",
                        "type": "string"
                    },
                    "faa": {
                        "description": "FAA code of the airport",
                        "type": "string"
                    },
                    "icao": {
                        "description": "ICAO code of the airport",
                        "type": "string"
                    },
                    "tz": {
                        "description": "Time zone of the airport",
                        "type": "string"
                    },
                    "geo": {
                        "description": "Geographical coordinates of the airport",
                        "properties": {
                            "lat": {
                                "description": "Latitude",
                                "type": "number",
                                "format": "float"
                            },
                            "lon": {
                                "description": "Longitude",
                                "type": "number",
                                "format": "float"
                            },
                            "alt": {
                                "description": "Altitude",
                                "type": "number",
                                "format": "float"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Hotel": {
                "title": "Hotel",
                "required": [
                    "title",
                    "name",
                    "country",
                    "city"
                ],
                "properties": {
                    "title": {
                        "description": "Title of the hotel",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the hotel",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address of the hotel",
                        "type": "string"
                    },
                    "directions": {
                        "description": "Directions to the hotel",
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "description": "Phone number of the hotel",
                        "type": "string"
                    },
                    "tollfree": {
                        "description": "Toll-free number of the hotel",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address of the hotel",
                        "type": "string",
                        "format": "email"
                    },
                    "fax": {
                        "description": "Fax number of the hotel",
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "description": "URL of the hotel's website",
                        "type": "string",
                        "format": "url"
                    },
                    "checkin": {
                        "description": "Check-in time",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "checkout": {
                        "description": "Check-out time",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "price": {
                        "description": "Price of the stay",
                        "type": "string"
                    },
                    "geo": {
                        "properties": {
                            "lat": {
                                "description": "Latitude of the hotel location",
                                "type": "number",
                                "format": "float"
                            },
                            "lon": {
                                "description": "Longitude of the hotel location",
                                "type": "number",
                                "format": "float"
                            },
                            "accuracy": {
                                "description": "Accuracy of the geolocation",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": {
                        "description": "Type of the establishment (e.g., hotel)",
                        "type": "string"
                    },
                    "id": {
                        "description": "ID of the hotel",
                        "type": "integer"
                    },
                    "country": {
                        "description": "Country where the hotel is located",
                        "type": "string"
                    },
                    "city": {
                        "description": "City where the hotel is located",
                        "type": "string"
                    },
                    "state": {
                        "description": "State where the hotel is located",
                        "type": "string",
                        "nullable": true
                    },
                    "reviews": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "content": {
                                    "description": "Content of the review",
                                    "type": "string"
                                },
                                "ratings": {
                                    "properties": {
                                        "Service": {
                                            "description": "Service rating",
                                            "type": "integer"
                                        },
                                        "Cleanliness": {
                                            "description": "Cleanliness rating",
                                            "type": "integer"
                                        },
                                        "Overall": {
                                            "description": "Overall rating",
                                            "type": "integer"
                                        },
                                        "Value": {
                                            "description": "Value rating",
                                            "type": "integer"
                                        },
                                        "Sleep Quality": {
                                            "description": "Sleep Quality rating",
                                            "type": "integer"
                                        },
                                        "Rooms": {
                                            "description": "Rooms rating",
                                            "type": "integer"
                                        },
                                        "Location": {
                                            "description": "Location rating",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "author": {
                                    "description": "Author of the review",
                                    "type": "string"
                                },
                                "date": {
                                    "description": "Date of the review",
                                    "type": "string",
                                    "format": "date-time"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "public_likes": {
                        "description": "List of public likes",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "vacancy": {
                        "description": "Vacancy status",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "Description of the hotel",
                        "type": "string"
                    },
                    "alias": {
                        "description": "Alias of the hotel",
                        "type": "string",
                        "nullable": true
                    },
                    "pets_ok": {
                        "description": "Whether pets are allowed",
                        "type": "boolean"
                    },
                    "free_breakfast": {
                        "description": "Whether free breakfast is offered",
                        "type": "boolean"
                    },
                    "free_internet": {
                        "description": "Whether free internet is offered",
                        "type": "boolean"
                    },
                    "free_parking": {
                        "description": "Whether free parking is offered",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Route": {
                "title": "Route",
                "required": [
                    "airline",
                    "airlineid",
                    "sourceairport",
                    "destinationairport",
                    "stops",
                    "equipment",
                    "schedule",
                    "distance"
                ],
                "properties": {
                    "airline": {
                        "description": "Airline code",
                        "type": "string"
                    },
                    "airlineid": {
                        "description": "Airline ID",
                        "type": "string"
                    },
                    "sourceairport": {
                        "description": "Source airport code",
                        "type": "string"
                    },
                    "destinationairport": {
                        "description": "Destination airport code",
                        "type": "string"
                    },
                    "stops": {
                        "description": "Number of stops",
                        "type": "integer"
                    },
                    "equipment": {
                        "description": "Equipment used",
                        "type": "string"
                    },
                    "schedule": {
                        "description": "Flight schedule",
                        "type": "array",
                        "items": {
                            "properties": {
                                "day": {
                                    "description": "Day of the flight",
                                    "type": "integer"
                                },
                                "utc": {
                                    "description": "UTC time of the flight",
                                    "type": "string"
                                },
                                "flight": {
                                    "description": "Flight number",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "distance": {
                        "description": "Distance of the route",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Airlines",
            "description": "Airlines"
        },
        {
            "name": "Airports",
            "description": "Airports"
        },
        {
            "name": "Hotels",
            "description": "Hotels"
        },
        {
            "name": "Routes",
            "description": "Routes"
        }
    ]
}